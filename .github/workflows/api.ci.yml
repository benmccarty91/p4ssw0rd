name: API Test/Build

on:
  push:
    paths:
      - "p4ssw0rd.api/**"
      - "scripts/api/**"
      - ".github/workflows/api.ci.yml"
  workflow_dispatch:

jobs:
  test:
    name: Run API Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: p4ssw0rd.api
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: npm install
      - name: Execute Tests
        run: npm run test:ci

  docker:
    name: Build and Push API
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        shell: bash
        working-directory: scripts
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      APP_NAME: ${{ secrets.APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Dependency Install
        run: npm install
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.APP_NAME }}
      - name: Build Docker Image
        env:
          VERSION_TAG: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
        run: npm run api:build
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
      - name: Push Docker Image
        env:
          VERSION_TAG: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
        run: npm run api:push

  deploy:
    name: Deploy the image to Google Cloud Run
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: docker
    defaults:
      run:
        shell: bash
        working-directory: p4ssw0rd.api
    env:
      IMAGE_NAME: gcr.io/${{ secrets.PROJECT_ID }}/${{ secrets.APP_NAME }}:master
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GCloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true
      - name: Deploy Docker image
        run: |
          gcloud run deploy p4ssw0rd-api \
            --image $IMAGE_NAME \
            --region us-west1 \
            --platform managed \
            --min-instances 0 \
            --max-instances 1 \
            --port 8080 \
            --service-account ${{secrets.GCP_EMAIL}} \
            --memory 256Mi \
            --cpu 1 \
            --timeout 20 \
            --concurrency 80 \
            --allow-unauthenticated
            --set-env-vars [GOOGLE_API_KEY=${{secrets.GOOGLE_API_KEY}}]
